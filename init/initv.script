#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Tripwire for detecting recon activiyt
# Description:       A service that will detect incoming probes and alert on them.
### END INIT INFO

name=`basename $0`

dir=""
cmd="$name"

pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name/$name.log"
stderr_log="/var/log/$name/$name.err"

get_pid() {
	cat "$pid_file"
}

is_running() {
	[ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

check_root() {
	if [ $EUID -ne 0 ]; then
		echo "Unable to run, must be root"
		exit 1
	fi
}

case "$1" in
	start)
	if is_running; then
		echo "Already started"
	else
		check_root
		echo "Starting $name"
		cd "$dir"
		$cmd >> "$stdout_log" 2>> "$stderr_log" &
		echo $! > "$pid_file"
		if ! is_running; then
			echo "Unable to start, see $stdout_log and $stderr_log"
			exit 1
		fi
	fi
	;;
	stop)
	if is_running; then
		check_root
		echo -n "Stopping $name.."
		kill -s SIGTERM `get_pid`
		for i in {1..10}
		do
			if ! is_running; then
				break
			fi
			echo -n "."
			sleep 1
		done
		echo

		if is_running; then
			kill -s SIGKILL `get_pid`
			sleep 1
		fi

		if is_running; then
			echo "Not stopped; may still be shutting down or shutdown may have failed"
			exit 1
		else
			echo "Stopped"
			if [ -f "$pid_file" ]; then
				rm "$pid_file"
			fi
		fi
	else
		echo "Not running"
	fi
	;;
	restart)
	$0 stop
	if is_running; then
		echo "Unable to stop, will not attempt to start"
		exit 1
	fi
	$0 start
	;;
	status)
	if is_running; then
		echo "Running"
	else
		echo "Stopped"
		exit 1
	fi
	;;
	*)
	echo "Usage: $0 {start|stop|restart|status}"
	exit 1
	;;
esac

exit 0
